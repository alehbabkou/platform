version: "3"

networks:
  prodnetwork:
    driver: bridge

services:
 nexus:
  build: ./nexus
  ports:
    - "18081:8081"
  networks:
    - prodnetwork
  volumes: 
    - ./data/nexus3/:/var/lib/nexus3/
    - ./data/nexus3/sonatype-work/log/:/sonatype-work/nexus3/log/
    - ./data/nexus3/sonatype-work/tmp/:/sonatype-work/nexus3/tmp/
    - ./data/nexus3/nexus-data/instances/:/nexus-data/instances/
 #   - ./data/sonatype/nexus/:/
 #   - ./data/sonatype/sonatype-work/
 #   - ./data/sonatype/sonatype-work/nexus3/
#    - ./data/nexus3/data:/nexus-data
#  depends_on:
#    - ldap
#  environment:
#    LDAP_URL: "ldap:389"
#    LDAP_BIND_DN: "cn=admin,dc=ldap,dc=example,dc=com"
#    LDAP_USER_PASSWORD_ATTRIBUTE: "admin123"
#    LDAP_USER_BASE_DN: "ou=people"
#    LDAP_GROUP_BASE_DN: "ou=groups"
#    LDAP_BIND_PASSWORD: "admin123"

 jenkins:
  build: ./jenkins
  ports:
    - "18080:8080"
  networks:
    - prodnetwork
  volumes:
    - /var/run/docker.sock:/var/run/docker.sock
   # - /usr/local/bin/docker:/usr/bin/docker
    - /opt/jenkins/:/var/lib/jenkins/
#    - /opt/jenkins/config/:/usr/share/jenkins/ref/
  depends_on:
#    - nexus
#    - gitlab
    - sonar
    - ldap
  environment:
#    - NEXUS_PORT=8081
    SONAR_PORT: "9000"
    SONAR_DB_PORT: "5432"
    #JENKINS_OPTS: "--prefix=/jenkins"
    #ROOT_URL: "${PROTO}://${TARGET_HOST}/jenkins/"
#    LDAP_SERVER: "ldap:389"
#    LDAP_ROOTDN: "dc=ldap,dc=example,dc=com"
#    LDAP_USER_SEARCH_BASE: "ou=people"
#    LDAP_USER_SEARCH: "uid={0}"
#    LDAP_GROUP_SEARCH_BASE: "ou=groups"
#    LDAP_GROUP_SEARCH_FILTER: ""
#    LDAP_GROUP_MEMBERSHIP_FILTER: ""
#    LDAP_MANAGER_DN: "cn=admin,dc=ldap,dc=example,dc=com"
#    LDAP_MANAGER_PASSWORD: "admin123"
#    LDAP_INHIBIT_INFER_ROOTDN: "false"
#    LDAP_DISABLE_MAIL_ADDRESS_RESOLVER: "false"
#    LDAP_DISPLAY_NAME_ATTRIBUTE_NAME: "displayName"
#    LDAP_MAIL_ADDRESS_ATTRIBUTE_NAME: "mail"
#    LDAP_GROUP_NAME_ADMIN: "administrators"
#    INITIAL_ADMIN_USER: "jenkins.user"
#    INITIAL_ADMIN_PASSWORD: "jenkins123"
#    SONAR_SERVER_URL: "http://sonar:9000/sonar/"
#    SONAR_ACCOUNT_LOGIN: "sonar"
#    SONAR_ACCOUNT_PASSWORD: "sonar"
#    SONAR_DB_URL: "jdbc:postgresql://sonardb:5432/sonar"
#    SONAR_DB_LOGIN: "sonar"
#    SONAR_DB_PASSWORD: "sonar"
#    SONAR_PLUGIN_VERSION: ""
#    SONAR_ADDITIONAL_PROPS: ""
#    SONAR_RUNNER_VERSION: "2.4"
#    ANT_VERSION: "1.9.4"
#    MAVEN_VERSION: "3.0.5"
#    NODEJS_VERSION: "6.9.4"
#    NODEJS_GLOBAL_PACKAGES: "grunt-cli@~0.1.13 bower@~1.3.12 plato@~1.2.1"
#    NODEJS_PACKAGES_REFRESH_HOURS: "72"
#    GIT_GLOBAL_CONFIG_NAME: "SPG Jenkins"
#    GROOVY_VERSION: "2.4.8"
#    GIT_GLOBAL_CONFIG_EMAIL: "jenkins@${LDAP_DOMAIN}"
   # DOCKER_TLS_VERIFY: ${DOCKER_TLS_VERIFY}
   # DOCKER_HOST: ${DOCKER_HOST}
   # DOCKER_CLIENT_CERT_PATH: ${DOCKER_CLIENT_CERT_PATH}
 #   DOCKER_NETWORK_NAME: "prodnetwork"

###SonarQube###

 sonar:
  build: ./sonar
  ports:
    - "19000:9000"
    - "5432:5432"
  networks:
    - prodnetwork
  depends_on:
    - sonardb
  environment:
    - SONARQUBE_JDBC_URL=jdbc:postgresql://sonardb:5432/sonar
    - SONARQUBE_JDBC_USERNAME=sonar
    - SONARQUBE_JDBC_PASSWORD=sonar
  volumes:
    - ./data/sonarqube/data:/opt/sonarqube/data
    - ./data/sonarqube/logs:/opt/sonarqube/logs

 sonardb:
  networks:
    - prodnetwork
  image: postgres
  environment:
    - POSTGRES_USER=sonar
    - POSTGRES_PASSWORD=sonar
  volumes:
    - ./data/sonar_postgres/data:/var/lib/postgresql/data

###Gitlab###
#
# gitlab:
#   image: gitlab/gitlab-ce:latest
#   restart: always
#   hostname: '35.202.143.0'
#   environment:
#    GITLAB_OMNIBUS_CONFIG: |
#      external_url 'http://35.202.143.0:80'
#   networks:
#    - prodnetwork
#  # GITLAB_OMNIBUS_CONFIG: |
#      # external_url 'https://gitlab.example.com'
#      # Add any other gitlab.rb configuration here, each on its own line
#  # environment:
#   #  - VIRTUAL_HOST=sub.domain.com
#   links:
#     - postgresqlgitlab:postgres
#     - redisgitlab:redis
#   ports:
#     - "80:80"
#     - "443:443"
#     - "2222:22"
#   volumes:
#     - /opt/gitlab/config:/etc/gitlab
#     - /opt/gitlab/logs:/var/log/gitlab
#     - /opt/gitlab/data:/var/opt/gitlab
#
# postgresqlgitlab:
#   image: postgres
#   networks:
#    - prodnetwork
#   ports:
#    - "45432:5432"
#   environment:
#     - POSTGRES_USER=gitlab
#     - POSTGRES_PASSWORD=gitlab
#     - DB_NAME=gitlabhq_production
#   volumes:
#     - /opt/gitlab/postgresql:/var/lib/postgresql
#
# redisgitlab:
#   image: redis:latest
#   networks:
#    - prodnetwork
#   volumes:
#     - /opt/gitlab/redis:/var/lib/redis

###ELK Stack###
#
# elasticsearch:
#    build: ./elasticsearch
#    restart: always
#    volumes:
#      - /opt/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
#    ports:
#      - "9200:9200"
#      - "9300:9300"
#    environment:
#      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
#    networks:
#      - prodnetwork
#
# logstash:
#    build: ./logstash
#    restart: always
##    command: logstash -f /conf/logstash.conf
#    volumes:
#      - /opt/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
# #     - /opt/logstash/pipeline:/usr/share/logstash/pipeline
#    ports:
#      - "5001:5000"
#    environment:
#      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
#    networks:
#      - prodnetwork
#    depends_on:
#      - elasticsearch
#
# kibana:
#    build: ./kibana
#    restart: always
#    volumes:
#      - /opt/kibana/config/:/usr/share/kibana/config
#    ports:
#      - "5601:5601"
#    networks:
#      - prodnetwork
#    depends_on:
#      - elasticsearch

###Selenium Stack###
#
# selenium-hub:
#  container_name: selenium-hub
#  restart: always
#  image: selenium/hub:2.53.0
#  networks:
#    - prodnetwork
#  expose:
#    - "4444"
#  ports:
#    - "4444:4444"
#
# selenium-node-chrome:
#  container_name: selenium-node-chrome
#  restart: always
#  image: selenium/node-chrome:2.53.0
#  networks:
#    - prodnetwork
#  environment:
#    SE_OPTS: "-nodeConfig /var/selenium-config/config-chrome.json"
#    REMOTE_HOST: "http://selenium-node-chrome:5555"
#    HUB_PORT_4444_TCP_ADDR: "selenium-hub"
#    HUB_PORT_4444_TCP_PORT: "4444"
#
# selenium-node-firefox:
#  container_name: selenium-node-firefox
#  restart: always
#  image: selenium/node-firefox:2.53.0
#  networks:
#    - prodnetwork
#  environment:
#    SE_OPTS: "-nodeConfig /var/selenium-config/config-firefox.json"
#    REMOTE_HOST: "http://selenium-node-firefox:5555"
#    HUB_PORT_4444_TCP_ADDR: "selenium-hub"
#    HUB_PORT_4444_TCP_PORT: "4444"
#
###LDAP###

 ldap:
  container_name: ldap
  restart: always
  image: accenture/adop-ldap:0.1.3
  networks:
    - prodnetwork
  expose:
    - "389"
  ports:
    - "389:389/tcp"
  environment:
    INITIAL_ADMIN_USER: admin.user
    INITIAL_ADMIN_PASSWORD: admin123
    JENKINS_PASSWORD: test
    SLAPD_PASSWORD: admin123
    SLAPD_DOMAIN: ldap.example.com
    SLAPD_FULL_DOMAIN: "dc=ldap,dc=example,dc=com"

 ldap-phpadmin:
  container_name: ldap-phpadmin
  restart: always
  image: accenture/adop-ldap-phpadmin:0.1.0
  networks:
    - prodnetwork
  expose:
    - "801"
  ports:
    - "801:80"
  environment:
    LDAP_SERVER_NAME: "LDAP"
    LDAP_SERVER_HOST: "ldap"
    LDAP_SERVER_PORT: "389"
    LDAP_SERVER_BIND_ID: "cn=admin,dc=ldap,dc=example,dc=com"
    LDAP_SERVER_BASE_DN: "dc=ldap,dc=example,dc=com"
